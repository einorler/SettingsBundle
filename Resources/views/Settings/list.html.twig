{% extends 'ONGRSettingsBundle::base.html.twig' %}
{% form_theme form 'bootstrap_3_horizontal_layout.html.twig' %}

{% block body %}
    <table id="settings" class="display table table-striped table-bordered" cellspacing="0" width="100%">
        <thead>
        <tr>
            <th>Name</th>
            <th>Value</th>
            <th>Description</th>
            <th>Profile</th>
            <th>Actions</th>
        </tr>
        </thead>
    </table>

    <div id="setting-edit" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="setting-action-title">Setting edit</h4>
                </div>
                <div class="modal-body">
                    {{ form_start(form) }}
                    {{ form_row(form.name) }}
                    {{ form_row(form.description) }}
                    {{ form_row(form.profile) }}
                    {{ form_row(form.type) }}
                    {{ form_row(form.value) }}
                    {% include 'ONGRSettingsBundle:inc:Form.html.twig' %}
                    {{ form_end(form) }}

                    <div class="clearfix"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="setting-form-submit">Save changes</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    <div id="setting-delete" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Are you sure you want to delete the setting?</h4>
                </div>
                <div class="modal-body text-right">
                    <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                    <button type="button" class="btn btn-primary" id="setting_delete_submit">Yes</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="application/javascript">
        $(document).ready(function () {

            var table = $('#settings').DataTable( {
                ajax: {
                    url: './settings/search',
                    dataSrc: 'documents'
                },
                stateSave: true,
                columns: [
                    { data: 'name' },
                    { data: 'value' },
                    { data: 'description' },
                    { data: 'profile' },
                    {}
                ],
                columnDefs: [
                {
                    "targets": 1,
                    "render": function ( data, type, row ) {
                        if (row['type'] == 'bool') {
                            var label = $('<label/>').addClass('boolean-property btn btn-default')
                                    .addClass('boolean-property-' + row['id']).attr('data-id', row['id']);
                            var on = label.clone().html('ON').attr('data-element', 'boolean-property-' + row['id'])
                                    .attr('data-value', 1);
                            var off = label.clone().html('OFF').attr('data-element', 'boolean-property-' + row['id'])
                                    .attr('data-value', 0);

                            if (row['value'] == true) {
                                on.addClass('btn-primary');
                            } else {
                                off.addClass('btn-primary');
                            }

                            var cell = $('<div/>').addClass('btn-group btn-group-sm').append(on, off);

                            return cell.prop('outerHTML');

                        } else {
                            return data;
                        }
                    }
                },
                {
                    "targets": 3,
                    "orderable": false,
                },
                {
                    "targets": 4,
                    "data": null,
                    "orderable": false,
                    "defaultContent": '<a class="edit btn btn-primary btn-xs" data-toggle="modal" data-target="#setting-edit">Edit</a>&nbsp;<a class="delete btn btn-danger btn-xs" data-toggle="modal" data-target="#setting-delete">Delete</a>'
                } ]
            } );

            var newSettingButton = $('<button/>').html('Add new setting').addClass('btn btn-success btn-sm').attr(
                {
                    'data-toggle': 'modal',
                    'data-target': '#setting-edit',
                    'id': 'new-setting',
                    'onclick': 'onNewSetting()'
                }
            );

            $('#settings_filter').append(newSettingButton.prop('outerHTML'));

            $('#setting-edit').on('shown.bs.modal', function () {
                $('#setting-edit').focus();
            });

            $('#setting-delete').on('shown.bs.modal', function () {
                $('#setting-delete').focus()
            });

            $('#setting-form-submit').on('click', function () {
                var $form = $('form');
                var type = $('#edit-setting-type').find('.btn-primary').attr('rel');
                switch (type) {
                    case 'string':
                        $('#setting_value').val($('#add-setting-default').val());
                        break;
                    case 'array':
                        var array = [];
                        $('#add-setting-array').children().each(function () {
                            array.push($(this).find('input').val());
                        });
                        $('#setting_value').val(JSON.stringify(array));
                        break;
                    case 'object':
                        $('#setting_value').val($('#add-setting-object').val());
                        break;
                }
                $.ajax({
                    url: $form.attr('action'),
                    data: $form.serializeArray(),
                    success: function (data) {
                        if (!data.error) {
                            alert('success!');
                            $('.form-horizontal').find('input').val('');
                            $('.form-horizontal').find('textarea').val('');
                            $('#add-setting-array').find('li').first().siblings('li').remove();
                            $('#edit-setting-type').find('label').removeClass('btn-primary');
                            $('.setting-bool-div').find('label').removeClass('btn-primary');
                        }
                    }
                });
            });

            $('#setting_delete_submit').on('click', function () {
                var id = $(this).attr('rel');
                $.ajax({
                    url: "./settings/delete/"+id,
                    success: function (data) {
                        if (data.error) {
                            alert(data.message);
                        } else {
                            table.ajax.reload();
                            $('.modal').modal('hide');
                        }
                    }
                });
            });

            $('#settings tbody').on( 'click', 'a.edit', function () {
                var data = table.row( $(this).parents('tr') ).data();
                $('#setting-action-title').text('Setting edit');
                $('form').attr('action', './settings/update/'+data.id);
                //load data to the edit form
            } );

            $('#settings tbody').on( 'click', 'a.delete', function () {
                var data = table.row( $(this).parents('tr') ).data();
                $('#setting_delete_submit').attr('rel', data.id);
                //load data to the edit form
            } );

            $('#settings tbody').on( 'click', 'label.boolean-property', function () {
                var self = $(this);
                $.post('./settings/update-value/' + self.data('id'), {value:self.data('value')}, function(){
                    var element = self.data('element');
                    $("." + element).toggleClass('btn-primary');
                })
            } );

            $('.setting-type-bool').on('click', function () {
                $(this).addClass('btn-primary');
                $(this).siblings().removeClass('btn-primary');
                $('#setting_value').val($(this).attr('rel'));
            } );

            $('.setting-type').on('click', function () {
                $(this).siblings().removeClass('btn-primary');
                $(this).addClass('btn-primary');
                $('.setting-input-div').addClass('hidden');
                $('.setting-'+$(this).attr('rel')+'-div').removeClass('hidden');
                $('#setting_type').val($(this).attr('rel'));
            } );

            $('.settings-array-add').on('click', function () {
                var li = '<li>' +
                            '<div class="input-group">' +
                                '<input class="form-control" type="text">' +
                                '<span class="input-group-btn">' +
                                    '<label class="btn btn-danger" onclick="removeArrayInput(this)" rel="a">' +
                                        '<i class="glyphicon glyphicon-remove"></i>' +
                                    '</label>' +
                                '</span>' +
                            '</div>' +
                        '</li>';
                $('#add-setting-array').append(li);
            } );
        });

        function onNewSetting () {
            var profiles;
            $.ajax({
                url: "./profiles/get_all",
                success: function (data) {
                    profiles = data;
                },
                async: false
            });
            $('#setting-create').focus();
            $('#setting-action-title').text('New setting');
            $('form').attr('action', './settings/create');
            var $profiles = $('#setting_profile');
            $profiles.attr('multiple', 'multiple');
            profiles.forEach(function (profile) {
                $profiles.append('<option value="'+profile+'">'+profile+'</option>');
            });
            $profiles.multiselect();
            $profiles.addClass('hidden');

            if (!$('#add-profile-div').length) {
                $profiles.closest('.col-sm-10').append(
                        '<div id="add-profile-div" style="display: inline-block; padding-left: 10px;">' +
                        '<label  style="padding-right: 10px">New profile: </label>' +
                        '<input type="text" class="add-profile-input">' +
                        '<label class="settings-array-add pull-right btn btn-success" onclick="addProfile(this)">' +
                        '<i class="glyphicon glyphicon-plus"></i>' +
                        '</label>' +
                        '</div>'
                );
            }

            $('.setting-type').first().addClass('btn-primary');
            $('.setting-string-div').removeClass('hidden');
            $('#setting_type').val('string');
        }

        function removeArrayInput (el) {
            $(el).closest('li').remove();
        }

        function addProfile (button) {
            var $input = $(button).siblings('.add-profile-input');
            var profile = $input.val();
            $input.val('');
            var $settings = $('#setting_profile');
            $settings.append('<option value="'+profile+'">'+profile+'</option>');
            $settings.multiselect('rebuild');
        }
    </script>
{% endblock %}